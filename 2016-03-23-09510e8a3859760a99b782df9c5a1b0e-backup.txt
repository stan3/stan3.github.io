///DOTCLEAR|2.1.5|single

[category cat_id,blog_id,cat_title,cat_url,cat_desc,cat_position,cat_lft,cat_rgt]
"62938","09510e8a3859760a99b782df9c5a1b0e","Ruby","Ruby","","0","2","3"

[setting setting_id,blog_id,setting_ns,setting_value,setting_type,setting_label]
"comments_pub","09510e8a3859760a99b782df9c5a1b0e","system","0","boolean","Publish comments immediatly"
"lightbox_enabled","09510e8a3859760a99b782df9c5a1b0e","lightbox","","string",""
"antispam_date_last_purge","09510e8a3859760a99b782df9c5a1b0e","antispam","1458666639","integer","Antispam Date Last Purge (unix timestamp)"
"antispam_moderation_ttl","09510e8a3859760a99b782df9c5a1b0e","antispam","7","integer","Antispam Moderation TTL (days)"
"theme","09510e8a3859760a99b782df9c5a1b0e","system","whiteroad","string","Blog theme"
"date_format","09510e8a3859760a99b782df9c5a1b0e","system","%A %e %B %Y","string","Date format"
"editor","09510e8a3859760a99b782df9c5a1b0e","system","Tristan Hill","string","Person responsible of the content"
"unix_id","09510e8a3859760a99b782df9c5a1b0e","system","2645948","string","Setuid to this id when acting as the owner"

[post post_id,blog_id,user_id,cat_id,post_dt,post_tz,post_creadt,post_upddt,post_password,post_type,post_format,post_url,post_lang,post_title,post_excerpt,post_excerpt_xhtml,post_content,post_content_xhtml,post_notes,post_words,post_meta,post_status,post_selected,post_open_comment,post_open_tb,nb_comment,nb_trackback,post_position]
"822648","09510e8a3859760a99b782df9c5a1b0e","TH3049-GANDI","","2015-06-07 14:23:00","UTC","2015-06-07 14:23:27","2015-06-07 14:23:27","","post","wiki","2015/06/07/Useful-UK-ADSL-info","en","Useful UK ADSL info","","","Some interesting links\n* [Encapsulation diagram|http://www2.rad.com/networks/2005/modems/ADSLprst.htm]\n* [BT support for PPPoA and PPPoE|http://www.sinet.bt.com/sinet/SINs/pdf/386v3p2.pdf]","<p>Some interesting links</p>\n<ul>\n<li><a href=\"http://www2.rad.com/networks/2005/modems/ADSLprst.htm\">Encapsulation\ndiagram</a></li>\n<li><a href=\"http://www.sinet.bt.com/sinet/SINs/pdf/386v3p2.pdf\">BT support for\nPPPoA and PPPoE</a></li>\n</ul>","","useful adsl info some interesting links encapsulation diagram support for pppoa and pppoe","","1","0","1","1","0","0","0"
"822624","09510e8a3859760a99b782df9c5a1b0e","TH3049-GANDI","","2015-06-07 09:29:00","UTC","2015-06-07 09:29:23","2015-06-07 16:25:36","","post","wiki","2015/06/07/PhantomJS-with-Ruby","en","PhantomJS with Ruby","","","I've just been experimenting with a couple of ways of using [PhantomJS|http://phantomjs.org/] because of the speed benefits.\r\n\r\nOption 1 is the poltergeist capybara driver, using with the [phantomjs gem|https://rubygems.org/gems/phantomjs/]\r\n///\r\nCapybara.register_driver :poltergeist do |app|\r\n  Capybara::Poltergeist::Driver.new(app, :phantomjs => Phantomjs.path, phantomjs_options: ['--proxy=http://localhost:9889'])\r\nend\r\n///\r\n\r\nThe next one was a bit trickier to work out:\r\n///\r\nSelenium::WebDriver::PhantomJS.path = Phantomjs.path\r\nCapybara.register_driver :selenium do |app|\r\n  Capybara::Selenium::Driver.new(app, :browser => :phantomjs)\r\nend\r\nCapybara.default_driver = :selenium\r\n///\r\n\r\nBoth work well.  I had a problem with javascript alert() and confirm() on both, as in verifying what the alert says.  There are bugs open for these.  There is also capybara webkit that I have not tried.","<p>I've just been experimenting with a couple of ways of using <a href=\"http://phantomjs.org/\">PhantomJS</a> because of the speed benefits.</p>\n<p>Option 1 is the poltergeist capybara driver, using with the <a href=\"https://rubygems.org/gems/phantomjs/\">phantomjs gem</a></p>\n<pre>\nCapybara.register_driver :poltergeist do |app|\n  Capybara::Poltergeist::Driver.new(app, :phantomjs =&gt; Phantomjs.path, phantomjs_options: ['--proxy=http://localhost:9889'])\nend\n</pre>\n<p>The next one was a bit trickier to work out:</p>\n<pre>\nSelenium::WebDriver::PhantomJS.path = Phantomjs.path\nCapybara.register_driver :selenium do |app|\n  Capybara::Selenium::Driver.new(app, :browser =&gt; :phantomjs)\nend\nCapybara.default_driver = :selenium\n</pre>\n<p>Both work well. I had a problem with javascript alert() and confirm() on\nboth, as in verifying what the alert says. There are bugs open for these. There\nis also capybara webkit that I have not tried.</p>","","phantomjs with ruby just been experimenting with couple ways using phantomjs because the speed benefits option the poltergeist capybara driver using with the phantomjs gem capybara register driver poltergeist app capybara poltergeist driver new app phantomjs phantomjs path phantomjs options proxy http localhost 9889 end the next one was bit trickier work out selenium webdriver phantomjs path phantomjs path capybara register driver selenium app capybara selenium driver new app browser phantomjs end capybara default driver selenium both work well had problem with javascript alert and confirm both verifying what the alert says there are bugs open for these there also capybara webkit that have not tried","","1","0","1","1","0","0","0"
"799969","09510e8a3859760a99b782df9c5a1b0e","TH1566-GANDI","","2014-10-28 16:00:00","UTC","2014-10-28 16:00:13","2014-10-28 16:50:25","","post","wiki","2014/10/28/Restoring-Gmail-Takeout","en","Restoring Gmail Takeout","","","Recently I wanted to merge an old gmail account with my main one.  The best way to achieve this seems to be by taking a Takeout of the Gmail data and restoring into the other account.  IMAP to IMAP seemed to be more time consuming and suffer from not dealing with Gmail labels properly.\r\n\r\nAfter some while searching for options I can across the following tools\r\n* [https://github.com/gaubert/gmvault|https://github.com/gaubert/gmvault]\r\n* [https://github.com/gburca/BaGoMa|https://github.com/gburca/BaGoMa]\r\n* [https://github.com/fxtentacle/gmail-imap-backup|https://github.com/fxtentacle/gmail-imap-backup]\r\n* [https://github.com/jay0lee/got-your-back/|https://github.com/jay0lee/got-your-back/]\r\n\r\nFrom these only the last seemed capable of [restoring the Takeout's mbox file|https://github.com/jay0lee/got-your-back/wiki#action_restorembox].  I extracted the Takeout's all.mbox to ~/Downloads/gmail and then ran the script.\r\n\r\n///\r\npython gyb.py --email my@gmail.com --action restore-mbox --local-folder ~/Downloads/gmail\r\n///","<p>Recently I wanted to merge an old gmail account with my main one. The best\nway to achieve this seems to be by taking a Takeout of the Gmail data and\nrestoring into the other account. IMAP to IMAP seemed to be more time consuming\nand suffer from not dealing with Gmail labels properly.</p>\n<p>After some while searching for options I can across the following tools</p>\n<ul>\n<li><a href=\"https://github.com/gaubert/gmvault\">https://github.com/gaubert/gmvault</a></li>\n<li><a href=\"https://github.com/gburca/BaGoMa\">https://github.com/gburca/BaGoMa</a></li>\n<li><a href=\"https://github.com/fxtentacle/gmail-imap-backup\">https://github.com/fxtentacle/gmail-imap-backup</a></li>\n<li><a href=\"https://github.com/jay0lee/got-your-back/\">https://github.com/jay0lee/got-your-back/</a></li>\n</ul>\n<p>From these only the last seemed capable of <a href=\"https://github.com/jay0lee/got-your-back/wiki#action_restorembox\">restoring\nthe Takeout's mbox file</a>. I extracted the Takeout's all.mbox to\n~/Downloads/gmail and then ran the script.</p>\n<pre>\npython gyb.py --email my@gmail.com --action restore-mbox --local-folder ~/Downloads/gmail\n</pre>","","restoring gmail takeout recently wanted merge old gmail account with main one the best way achieve this seems taking takeout the gmail data and restoring into the other account imap imap seemed more time consuming and suffer from not dealing with gmail labels properly after some while searching for options can across the following tools https github com gaubert gmvault https github com gburca bagoma https github com fxtentacle gmail imap backup https github com jay0lee got your back from these only the last seemed capable restoring the takeout mbox file extracted the takeout all mbox downloads gmail and then ran the script python gyb email gmail com action restore mbox local folder downloads gmail","a:0:{}","1","0","1","1","0","0","0"
"799962","09510e8a3859760a99b782df9c5a1b0e","TH1566-GANDI","","2014-10-28 16:16:40.988158","UTC","2014-10-28 16:16:40.988158","2014-10-28 15:49:43","","post","xhtml","2014/10/28/first","","Premier billet","","","<p>Je suis le premier billet. Modifiez moi.</p>","<p>Je suis le premier billet. Modifiez moi.</p>","","","","0","0","0","0","0","0","0"
"812754","09510e8a3859760a99b782df9c5a1b0e","TH3049-GANDI","","2015-03-06 10:50:00","UTC","2015-03-06 10:50:17","2015-03-06 10:50:17","","post","wiki","2015/03/06/Is-this-good-or-bad-python-code","en","Is this good or bad python code?","","","A recursive generator:\n\n///\n#!/usr/bin/python3\nimport string\nimport itertools\n\ndef letter_count():\n    prefix = ''\n    prefix_generator = letter_count()\n    while True:\n        for l in string.ascii_lowercase:\n            yield prefix + l\n        prefix = next(prefix_generator)\n\nif __name__ == '__main__':\n    for l in letter_count():\n        print(l)\n\n///","<p>A recursive generator:</p>\n<pre>\n#!/usr/bin/python3\nimport string\nimport itertools\n\ndef letter_count():\n    prefix = ''\n    prefix_generator = letter_count()\n    while True:\n        for l in string.ascii_lowercase:\n            yield prefix + l\n        prefix = next(prefix_generator)\n\nif __name__ == '__main__':\n    for l in letter_count():\n        print(l)\n\n</pre>","","this good bad python code recursive generator usr bin python3 import string import itertools def letter count prefix prefix generator letter count while true for string ascii lowercase yield prefix prefix next prefix generator name main for letter count print","","1","0","1","1","0","0","0"
"812759","09510e8a3859760a99b782df9c5a1b0e","TH3049-GANDI","","2015-03-06 12:06:00","UTC","2015-03-06 12:06:26","2015-03-06 12:13:58","","post","wiki","2015/03/06/github","en","different github deploy keys","","","This litte script set in GIT_SSH switches based on the repository name\r\n///\r\n#!/bin/sh\r\nset -e\r\n\r\necho \"$2\" >&2\r\nfor SUFFIX in \"'\" \".git'\"; do\r\n  BASENAME=\"$(basename \"$2\" \"$SUFFIX\")\"\r\n  [ -f \"$HOME/.ssh/$BASENAME\" ] && break\r\ndone\r\nKEY=\"$HOME/.ssh/id_ecdsa_$BASENAME\"\r\nexec ssh -i \"$KEY\" \"$@\"\r\n///","<p>This litte script set in GIT_SSH switches based on the repository name</p>\n<pre>\n#!/bin/sh\nset -e\n\necho &quot;$2&quot; &gt;&amp;2\nfor SUFFIX in &quot;'&quot; &quot;.git'&quot;; do\n  BASENAME=&quot;$(basename &quot;$2&quot; &quot;$SUFFIX&quot;)&quot;\n  [ -f &quot;$HOME/.ssh/$BASENAME&quot; ] &amp;&amp; break\ndone\nKEY=&quot;$HOME/.ssh/id_ecdsa_$BASENAME&quot;\nexec ssh -i &quot;$KEY&quot; &quot;$@&quot;\n</pre>","","different github deploy keys this litte script set git ssh switches based the repository name bin set echo quot quot amp for suffix quot quot quot git quot basename quot basename quot quot quot suffix quot quot quot home ssh basename quot amp amp break done key quot home ssh ecdsa basename quot exec ssh quot key quot quot quot","","1","0","1","1","0","0","0"
"801481","09510e8a3859760a99b782df9c5a1b0e","TH3049-GANDI","","2014-11-12 18:48:00","UTC","2014-11-12 18:48:02","2014-11-12 18:48:51","","post","wiki","2014/11/12/Troubleshooting-SSL-connections","en","Troubleshooting SSL connections","","","With openssl 1.0.2 the s_client command supports a --trace when built with enable-ssl-trace:\r\n\r\n///\r\n$ tar xf openssl-1.0.2-beta3.tar.gz\r\n$ cd openssl-1.0.2-beta3\r\n$ ./config enable-ssl-trace --prefix=$PWD/prefix --openssldir=$PWD/prefix\r\n$ make dep\r\n$ make\r\n$ apps/openssl s_client -connect yum.dev.bbc.co.uk:443 -cert /home/stan/Downloads/hillt08.pem -CAfile /home/stan/Downloads/ca.pem -debug -state -trace\r\nWARNING: can't open config file: /home/stan/Downloads/openssl-1.0.2-beta3/prefix/openssl.cnf\r\nCONNECTED(00000003)\r\nSSL_connect:before/connect initialization\r\nwrite to 0x2387050 [0x23870d0] (361 bytes => 361 (0x169))\r\n0000 - 16 03 01 01 64 01 00 01-60 03 03 ef c0 3d 48 78   ....d...`....=Hx\r\n0010 - fa 79 79 e3 4a 7e 9d 96-86 92 d6 25 3e d8 7b 03   .yy.J~.....%>.{.\r\n0020 - ee ff fb 7b 0e b4 e3 7f-df 11 83 00 00 c4 c0 30   ...{...........0\r\n0030 - c0 2c c0 28 c0 24 c0 14-c0 0a 00 a5 00 a3 00 a1   .,.(.$..........\r\n0040 - 00 9f 00 6b 00 6a 00 69-00 68 00 39 00 38 00 37   ...k.j.i.h.9.8.7\r\n0050 - 00 36 00 88 00 87 00 86-00 85 c0 32 c0 2e c0 2a   .6.........2...*\r\n0060 - c0 26 c0 0f c0 05 00 9d-00 3d 00 35 00 84 c0 2f   .&.......=.5.../\r\n0070 - c0 2b c0 27 c0 23 c0 13-c0 09 00 a4 00 a2 00 a0   .+.'.#..........\r\n0080 - 00 9e 00 67 00 40 00 3f-00 3e 00 33 00 32 00 31   ...g.@.?.>.3.2.1\r\n0090 - 00 30 00 9a 00 99 00 98-00 97 00 45 00 44 00 43   .0.........E.D.C\r\n00a0 - 00 42 c0 31 c0 2d c0 29-c0 25 c0 0e c0 04 00 9c   .B.1.-.).%......\r\n00b0 - 00 3c 00 2f 00 96 00 41-00 07 c0 11 c0 07 c0 0c   .<./...A........\r\n00c0 - c0 02 00 05 00 04 c0 12-c0 08 00 16 00 13 00 10   ................\r\n00d0 - 00 0d c0 0d c0 03 00 0a-00 15 00 12 00 0f 00 0c   ................\r\n00e0 - 00 09 00 14 00 11 00 0e-00 0b 00 08 00 06 00 03   ................\r\n00f0 - 00 ff 01 00 00 73 00 0b-00 04 03 00 01 02 00 0a   .....s..........\r\n0100 - 00 3a 00 38 00 0e 00 0d-00 19 00 1c 00 0b 00 0c   .:.8............\r\n0110 - 00 1b 00 18 00 09 00 0a-00 1a 00 16 00 17 00 08   ................\r\n0120 - 00 06 00 07 00 14 00 15-00 04 00 05 00 12 00 13   ................\r\n0130 - 00 01 00 02 00 03 00 0f-00 10 00 11 00 23 00 00   .............#..\r\n0140 - 00 0d 00 20 00 1e 06 01-06 02 06 03 05 01 05 02   ... ............\r\n0150 - 05 03 04 01 04 02 04 03-03 01 03 02 03 03 02 01   ................\r\n0160 - 02 02 02 03 00 0f 00 01-01                        .........\r\nSent Record\r\nHeader:\r\n  Version = TLS 1.0 (0x301)\r\n  Content Type = Handshake (22)\r\n  Length = 356\r\n    ClientHello, Length=352\r\n      client_version=0x303 (TLS 1.2)\r\n      Random:\r\n        gmt_unix_time=0xEFC03D48\r\n        random_bytes (len=28): 78FA7979E34A7E9D968692D6253ED87B03EEFFFB7B0EB4E37FDF1183\r\n      session_id (len=0): \r\n      cipher_suites (len=196)\r\n        {0xC0, 0x30} TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\r\n        {0xC0, 0x2C} TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\r\n        {0xC0, 0x28} TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\r\n        {0xC0, 0x24} TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\r\n        {0xC0, 0x14} TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\r\n        {0xC0, 0x0A} TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\r\n        {0x00, 0xA5} TLS_DH_DSS_WITH_AES_256_GCM_SHA384\r\n        {0x00, 0xA3} TLS_DHE_DSS_WITH_AES_256_GCM_SHA384\r\n        {0x00, 0xA1} TLS_DH_RSA_WITH_AES_256_GCM_SHA384\r\n        {0x00, 0x9F} TLS_DHE_RSA_WITH_AES_256_GCM_SHA384\r\n        {0x00, 0x6B} TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\r\n        {0x00, 0x6A} TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\r\n        {0x00, 0x69} TLS_DH_RSA_WITH_AES_256_CBC_SHA256\r\n        {0x00, 0x68} TLS_DH_DSS_WITH_AES_256_CBC_SHA256\r\n        {0x00, 0x39} TLS_DHE_RSA_WITH_AES_256_CBC_SHA\r\n        {0x00, 0x38} TLS_DHE_DSS_WITH_AES_256_CBC_SHA\r\n        {0x00, 0x37} TLS_DH_RSA_WITH_AES_256_CBC_SHA\r\n        {0x00, 0x36} TLS_DH_DSS_WITH_AES_256_CBC_SHA\r\n        {0x00, 0x88} TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA\r\n        {0x00, 0x87} TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA\r\n        {0x00, 0x86} TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA\r\n        {0x00, 0x85} TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA\r\n        {0xC0, 0x32} TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384\r\n        {0xC0, 0x2E} TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384\r\n        {0xC0, 0x2A} TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384\r\n        {0xC0, 0x26} TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384\r\n        {0xC0, 0x0F} TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\r\n        {0xC0, 0x05} TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\r\n        {0x00, 0x9D} TLS_RSA_WITH_AES_256_GCM_SHA384\r\n        {0x00, 0x3D} TLS_RSA_WITH_AES_256_CBC_SHA256\r\n        {0x00, 0x35} TLS_RSA_WITH_AES_256_CBC_SHA\r\n        {0x00, 0x84} TLS_RSA_WITH_CAMELLIA_256_CBC_SHA\r\n        {0xC0, 0x2F} TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\n        {0xC0, 0x2B} TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\r\n        {0xC0, 0x27} TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\r\n        {0xC0, 0x23} TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\r\n        {0xC0, 0x13} TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\r\n        {0xC0, 0x09} TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\r\n        {0x00, 0xA4} TLS_DH_DSS_WITH_AES_128_GCM_SHA256\r\n        {0x00, 0xA2} TLS_DHE_DSS_WITH_AES_128_GCM_SHA256\r\n        {0x00, 0xA0} TLS_DH_RSA_WITH_AES_128_GCM_SHA256\r\n        {0x00, 0x9E} TLS_DHE_RSA_WITH_AES_128_GCM_SHA256\r\n        {0x00, 0x67} TLS_DHE_RSA_WITH_AES_128_CBC_SHA256\r\n        {0x00, 0x40} TLS_DHE_DSS_WITH_AES_128_CBC_SHA256\r\n        {0x00, 0x3F} TLS_DH_RSA_WITH_AES_128_CBC_SHA256\r\n        {0x00, 0x3E} TLS_DH_DSS_WITH_AES_128_CBC_SHA256\r\n        {0x00, 0x33} TLS_DHE_RSA_WITH_AES_128_CBC_SHA\r\n        {0x00, 0x32} TLS_DHE_DSS_WITH_AES_128_CBC_SHA\r\n        {0x00, 0x31} TLS_DH_RSA_WITH_AES_128_CBC_SHA\r\n        {0x00, 0x30} TLS_DH_DSS_WITH_AES_128_CBC_SHA\r\n        {0x00, 0x9A} TLS_DHE_RSA_WITH_SEED_CBC_SHA\r\n        {0x00, 0x99} TLS_DHE_DSS_WITH_SEED_CBC_SHA\r\n        {0x00, 0x98} TLS_DH_RSA_WITH_SEED_CBC_SHA\r\n        {0x00, 0x97} TLS_DH_DSS_WITH_SEED_CBC_SHA\r\n        {0x00, 0x45} TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA\r\n        {0x00, 0x44} TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA\r\n        {0x00, 0x43} TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA\r\n        {0x00, 0x42} TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA\r\n        {0xC0, 0x31} TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256\r\n        {0xC0, 0x2D} TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256\r\n        {0xC0, 0x29} TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\r\n        {0xC0, 0x25} TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\r\n        {0xC0, 0x0E} TLS_ECDH_RSA_WITH_AES_128_CBC_SHA\r\n        {0xC0, 0x04} TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA\r\n        {0x00, 0x9C} TLS_RSA_WITH_AES_128_GCM_SHA256\r\n        {0x00, 0x3C} TLS_RSA_WITH_AES_128_CBC_SHA256\r\n        {0x00, 0x2F} TLS_RSA_WITH_AES_128_CBC_SHA\r\n        {0x00, 0x96} TLS_RSA_WITH_SEED_CBC_SHA\r\n        {0x00, 0x41} TLS_RSA_WITH_CAMELLIA_128_CBC_SHA\r\n        {0x00, 0x07} SSL_RSA_WITH_IDEA_CBC_SHA\r\n        {0xC0, 0x11} TLS_ECDHE_RSA_WITH_RC4_128_SHA\r\n        {0xC0, 0x07} TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\r\n        {0xC0, 0x0C} TLS_ECDH_RSA_WITH_RC4_128_SHA\r\n        {0xC0, 0x02} TLS_ECDH_ECDSA_WITH_RC4_128_SHA\r\n        {0x00, 0x05} SSL_RSA_WITH_RC4_128_SHA\r\n        {0x00, 0x04} SSL_RSA_WITH_RC4_128_MD5\r\n        {0xC0, 0x12} TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\r\n        {0xC0, 0x08} TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA\r\n        {0x00, 0x16} SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA\r\n        {0x00, 0x13} SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA\r\n        {0x00, 0x10} SSL_DH_RSA_WITH_3DES_EDE_CBC_SHA\r\n        {0x00, 0x0D} SSL_DH_DSS_WITH_3DES_EDE_CBC_SHA\r\n        {0xC0, 0x0D} TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA\r\n        {0xC0, 0x03} TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA\r\n        {0x00, 0x0A} SSL_RSA_WITH_3DES_EDE_CBC_SHA\r\n        {0x00, 0x15} SSL_DHE_RSA_WITH_DES_CBC_SHA\r\n        {0x00, 0x12} SSL_DHE_DSS_WITH_DES_CBC_SHA\r\n        {0x00, 0x0F} SSL_DH_RSA_WITH_DES_CBC_SHA\r\n        {0x00, 0x0C} SSL_DH_DSS_WITH_DES_CBC_SHA\r\n        {0x00, 0x09} SSL_RSA_WITH_DES_CBC_SHA\r\n        {0x00, 0x14} SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA\r\n        {0x00, 0x11} SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA\r\n        {0x00, 0x0E} SSL_DH_RSA_EXPORT_WITH_DES40_CBC_SHA\r\n        {0x00, 0x0B} SSL_DH_DSS_EXPORT_WITH_DES40_CBC_SHA\r\n        {0x00, 0x08} SSL_RSA_EXPORT_WITH_DES40_CBC_SHA\r\n        {0x00, 0x06} SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5\r\n        {0x00, 0x03} SSL_RSA_EXPORT_WITH_RC4_40_MD5\r\n        {0x00, 0xFF} TLS_EMPTY_RENEGOTIATION_INFO_SCSV\r\n      compression_methods (len=1)\r\n        No Compression (0x00)\r\n      extensions, length = 115\r\n        extension_type=ec_point_formats(11), length=4\r\n          uncompressed (0)\r\n          ansiX962_compressed_prime (1)\r\n          ansiX962_compressed_char2 (2)\r\n        extension_type=elliptic_curves(10), length=58\r\n          sect571r1 (B-571) (14)\r\n          sect571k1 (K-571) (13)\r\n          secp521r1 (P-521) (25)\r\n          brainpoolP512r1 (28)\r\n          sect409k1 (K-409) (11)\r\n          sect409r1 (B-409) (12)\r\n          brainpoolP384r1 (27)\r\n          secp384r1 (P-384) (24)\r\n          sect283k1 (K-283) (9)\r\n          sect283r1 (B-283) (10)\r\n          brainpoolP256r1 (26)\r\n          secp256k1 (22)\r\n          secp256r1 (P-256) (23)\r\n          sect239k1 (8)\r\n          sect233k1 (K-233) (6)\r\n          sect233r1 (B-233) (7)\r\n          secp224k1 (20)\r\n          secp224r1 (P-224) (21)\r\n          sect193r1 (4)\r\n          sect193r2 (5)\r\n          secp192k1 (18)\r\n          secp192r1 (P-192) (19)\r\n          sect163k1 (K-163) (1)\r\n          sect163r1 (2)\r\n          sect163r2 (B-163) (3)\r\n          secp160k1 (15)\r\n          secp160r1 (16)\r\n          secp160r2 (17)\r\n        extension_type=session_ticket(35), length=0\r\n        extension_type=signature_algorithms(13), length=32\r\n          sha512+rsa (6+1)\r\n          sha512+dsa (6+2)\r\n          sha512+ecdsa (6+3)\r\n          sha384+rsa (5+1)\r\n          sha384+dsa (5+2)\r\n          sha384+ecdsa (5+3)\r\n          sha256+rsa (4+1)\r\n          sha256+dsa (4+2)\r\n          sha256+ecdsa (4+3)\r\n          sha224+rsa (3+1)\r\n          sha224+dsa (3+2)\r\n          sha224+ecdsa (3+3)\r\n          sha1+rsa (2+1)\r\n          sha1+dsa (2+2)\r\n          sha1+ecdsa (2+3)\r\n        extension_type=heartbeat(15), length=1\r\n          HeartbeatMode: peer_allowed_to_send\r\n\r\nSSL_connect:SSLv2/v3 write client hello A\r\nread from 0x2387050 [0x238c630] (7 bytes => 7 (0x7))\r\n0000 - 15 03 03 00 02 02 28                              ......(\r\nSSL3 alert read:fatal:handshake failure\r\nReceived Record\r\nHeader:\r\n  Version = TLS 1.2 (0x303)\r\n  Content Type = Alert (21)\r\n  Length = 2\r\n    Level=fatal(2), description=handshake failure(40)\r\n\r\nSSL_connect:error in SSLv2/v3 read server hello A\r\n140716039956128:error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure:s23_clnt.c:777:\r\n---\r\nno peer certificate available\r\n---\r\nNo client certificate CA names sent\r\n---\r\nSSL handshake has read 7 bytes and written 361 bytes\r\n---\r\nNew, (NONE), Cipher is (NONE)\r\nSecure Renegotiation IS NOT supported\r\nCompression: NONE\r\nExpansion: NONE\r\nNo ALPN negotiated\r\n---\r\n\r\n///","<p>With openssl 1.0.2 the s_client command supports a --trace when built with\nenable-ssl-trace:</p>\n<pre>\n$ tar xf openssl-1.0.2-beta3.tar.gz\n$ cd openssl-1.0.2-beta3\n$ ./config enable-ssl-trace --prefix=$PWD/prefix --openssldir=$PWD/prefix\n$ make dep\n$ make\n$ apps/openssl s_client -connect yum.dev.bbc.co.uk:443 -cert /home/stan/Downloads/hillt08.pem -CAfile /home/stan/Downloads/ca.pem -debug -state -trace\nWARNING: can't open config file: /home/stan/Downloads/openssl-1.0.2-beta3/prefix/openssl.cnf\nCONNECTED(00000003)\nSSL_connect:before/connect initialization\nwrite to 0x2387050 [0x23870d0] (361 bytes =&gt; 361 (0x169))\n0000 - 16 03 01 01 64 01 00 01-60 03 03 ef c0 3d 48 78   ....d...`....=Hx\n0010 - fa 79 79 e3 4a 7e 9d 96-86 92 d6 25 3e d8 7b 03   .yy.J~.....%&gt;.{.\n0020 - ee ff fb 7b 0e b4 e3 7f-df 11 83 00 00 c4 c0 30   ...{...........0\n0030 - c0 2c c0 28 c0 24 c0 14-c0 0a 00 a5 00 a3 00 a1   .,.(.$..........\n0040 - 00 9f 00 6b 00 6a 00 69-00 68 00 39 00 38 00 37   ...k.j.i.h.9.8.7\n0050 - 00 36 00 88 00 87 00 86-00 85 c0 32 c0 2e c0 2a   .6.........2...*\n0060 - c0 26 c0 0f c0 05 00 9d-00 3d 00 35 00 84 c0 2f   .&amp;.......=.5.../\n0070 - c0 2b c0 27 c0 23 c0 13-c0 09 00 a4 00 a2 00 a0   .+.'.#..........\n0080 - 00 9e 00 67 00 40 00 3f-00 3e 00 33 00 32 00 31   ...g.@.?.&gt;.3.2.1\n0090 - 00 30 00 9a 00 99 00 98-00 97 00 45 00 44 00 43   .0.........E.D.C\n00a0 - 00 42 c0 31 c0 2d c0 29-c0 25 c0 0e c0 04 00 9c   .B.1.-.).%......\n00b0 - 00 3c 00 2f 00 96 00 41-00 07 c0 11 c0 07 c0 0c   .&lt;./...A........\n00c0 - c0 02 00 05 00 04 c0 12-c0 08 00 16 00 13 00 10   ................\n00d0 - 00 0d c0 0d c0 03 00 0a-00 15 00 12 00 0f 00 0c   ................\n00e0 - 00 09 00 14 00 11 00 0e-00 0b 00 08 00 06 00 03   ................\n00f0 - 00 ff 01 00 00 73 00 0b-00 04 03 00 01 02 00 0a   .....s..........\n0100 - 00 3a 00 38 00 0e 00 0d-00 19 00 1c 00 0b 00 0c   .:.8............\n0110 - 00 1b 00 18 00 09 00 0a-00 1a 00 16 00 17 00 08   ................\n0120 - 00 06 00 07 00 14 00 15-00 04 00 05 00 12 00 13   ................\n0130 - 00 01 00 02 00 03 00 0f-00 10 00 11 00 23 00 00   .............#..\n0140 - 00 0d 00 20 00 1e 06 01-06 02 06 03 05 01 05 02   ... ............\n0150 - 05 03 04 01 04 02 04 03-03 01 03 02 03 03 02 01   ................\n0160 - 02 02 02 03 00 0f 00 01-01                        .........\nSent Record\nHeader:\n  Version = TLS 1.0 (0x301)\n  Content Type = Handshake (22)\n  Length = 356\n    ClientHello, Length=352\n      client_version=0x303 (TLS 1.2)\n      Random:\n        gmt_unix_time=0xEFC03D48\n        random_bytes (len=28): 78FA7979E34A7E9D968692D6253ED87B03EEFFFB7B0EB4E37FDF1183\n      session_id (len=0): \n      cipher_suites (len=196)\n        {0xC0, 0x30} TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n        {0xC0, 0x2C} TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n        {0xC0, 0x28} TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\n        {0xC0, 0x24} TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\n        {0xC0, 0x14} TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n        {0xC0, 0x0A} TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n        {0x00, 0xA5} TLS_DH_DSS_WITH_AES_256_GCM_SHA384\n        {0x00, 0xA3} TLS_DHE_DSS_WITH_AES_256_GCM_SHA384\n        {0x00, 0xA1} TLS_DH_RSA_WITH_AES_256_GCM_SHA384\n        {0x00, 0x9F} TLS_DHE_RSA_WITH_AES_256_GCM_SHA384\n        {0x00, 0x6B} TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\n        {0x00, 0x6A} TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\n        {0x00, 0x69} TLS_DH_RSA_WITH_AES_256_CBC_SHA256\n        {0x00, 0x68} TLS_DH_DSS_WITH_AES_256_CBC_SHA256\n        {0x00, 0x39} TLS_DHE_RSA_WITH_AES_256_CBC_SHA\n        {0x00, 0x38} TLS_DHE_DSS_WITH_AES_256_CBC_SHA\n        {0x00, 0x37} TLS_DH_RSA_WITH_AES_256_CBC_SHA\n        {0x00, 0x36} TLS_DH_DSS_WITH_AES_256_CBC_SHA\n        {0x00, 0x88} TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA\n        {0x00, 0x87} TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA\n        {0x00, 0x86} TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA\n        {0x00, 0x85} TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA\n        {0xC0, 0x32} TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384\n        {0xC0, 0x2E} TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384\n        {0xC0, 0x2A} TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384\n        {0xC0, 0x26} TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384\n        {0xC0, 0x0F} TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\n        {0xC0, 0x05} TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\n        {0x00, 0x9D} TLS_RSA_WITH_AES_256_GCM_SHA384\n        {0x00, 0x3D} TLS_RSA_WITH_AES_256_CBC_SHA256\n        {0x00, 0x35} TLS_RSA_WITH_AES_256_CBC_SHA\n        {0x00, 0x84} TLS_RSA_WITH_CAMELLIA_256_CBC_SHA\n        {0xC0, 0x2F} TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n        {0xC0, 0x2B} TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n        {0xC0, 0x27} TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n        {0xC0, 0x23} TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n        {0xC0, 0x13} TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n        {0xC0, 0x09} TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n        {0x00, 0xA4} TLS_DH_DSS_WITH_AES_128_GCM_SHA256\n        {0x00, 0xA2} TLS_DHE_DSS_WITH_AES_128_GCM_SHA256\n        {0x00, 0xA0} TLS_DH_RSA_WITH_AES_128_GCM_SHA256\n        {0x00, 0x9E} TLS_DHE_RSA_WITH_AES_128_GCM_SHA256\n        {0x00, 0x67} TLS_DHE_RSA_WITH_AES_128_CBC_SHA256\n        {0x00, 0x40} TLS_DHE_DSS_WITH_AES_128_CBC_SHA256\n        {0x00, 0x3F} TLS_DH_RSA_WITH_AES_128_CBC_SHA256\n        {0x00, 0x3E} TLS_DH_DSS_WITH_AES_128_CBC_SHA256\n        {0x00, 0x33} TLS_DHE_RSA_WITH_AES_128_CBC_SHA\n        {0x00, 0x32} TLS_DHE_DSS_WITH_AES_128_CBC_SHA\n        {0x00, 0x31} TLS_DH_RSA_WITH_AES_128_CBC_SHA\n        {0x00, 0x30} TLS_DH_DSS_WITH_AES_128_CBC_SHA\n        {0x00, 0x9A} TLS_DHE_RSA_WITH_SEED_CBC_SHA\n        {0x00, 0x99} TLS_DHE_DSS_WITH_SEED_CBC_SHA\n        {0x00, 0x98} TLS_DH_RSA_WITH_SEED_CBC_SHA\n        {0x00, 0x97} TLS_DH_DSS_WITH_SEED_CBC_SHA\n        {0x00, 0x45} TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA\n        {0x00, 0x44} TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA\n        {0x00, 0x43} TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA\n        {0x00, 0x42} TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA\n        {0xC0, 0x31} TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256\n        {0xC0, 0x2D} TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256\n        {0xC0, 0x29} TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\n        {0xC0, 0x25} TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\n        {0xC0, 0x0E} TLS_ECDH_RSA_WITH_AES_128_CBC_SHA\n        {0xC0, 0x04} TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA\n        {0x00, 0x9C} TLS_RSA_WITH_AES_128_GCM_SHA256\n        {0x00, 0x3C} TLS_RSA_WITH_AES_128_CBC_SHA256\n        {0x00, 0x2F} TLS_RSA_WITH_AES_128_CBC_SHA\n        {0x00, 0x96} TLS_RSA_WITH_SEED_CBC_SHA\n        {0x00, 0x41} TLS_RSA_WITH_CAMELLIA_128_CBC_SHA\n        {0x00, 0x07} SSL_RSA_WITH_IDEA_CBC_SHA\n        {0xC0, 0x11} TLS_ECDHE_RSA_WITH_RC4_128_SHA\n        {0xC0, 0x07} TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n        {0xC0, 0x0C} TLS_ECDH_RSA_WITH_RC4_128_SHA\n        {0xC0, 0x02} TLS_ECDH_ECDSA_WITH_RC4_128_SHA\n        {0x00, 0x05} SSL_RSA_WITH_RC4_128_SHA\n        {0x00, 0x04} SSL_RSA_WITH_RC4_128_MD5\n        {0xC0, 0x12} TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n        {0xC0, 0x08} TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA\n        {0x00, 0x16} SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA\n        {0x00, 0x13} SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA\n        {0x00, 0x10} SSL_DH_RSA_WITH_3DES_EDE_CBC_SHA\n        {0x00, 0x0D} SSL_DH_DSS_WITH_3DES_EDE_CBC_SHA\n        {0xC0, 0x0D} TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA\n        {0xC0, 0x03} TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA\n        {0x00, 0x0A} SSL_RSA_WITH_3DES_EDE_CBC_SHA\n        {0x00, 0x15} SSL_DHE_RSA_WITH_DES_CBC_SHA\n        {0x00, 0x12} SSL_DHE_DSS_WITH_DES_CBC_SHA\n        {0x00, 0x0F} SSL_DH_RSA_WITH_DES_CBC_SHA\n        {0x00, 0x0C} SSL_DH_DSS_WITH_DES_CBC_SHA\n        {0x00, 0x09} SSL_RSA_WITH_DES_CBC_SHA\n        {0x00, 0x14} SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA\n        {0x00, 0x11} SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA\n        {0x00, 0x0E} SSL_DH_RSA_EXPORT_WITH_DES40_CBC_SHA\n        {0x00, 0x0B} SSL_DH_DSS_EXPORT_WITH_DES40_CBC_SHA\n        {0x00, 0x08} SSL_RSA_EXPORT_WITH_DES40_CBC_SHA\n        {0x00, 0x06} SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5\n        {0x00, 0x03} SSL_RSA_EXPORT_WITH_RC4_40_MD5\n        {0x00, 0xFF} TLS_EMPTY_RENEGOTIATION_INFO_SCSV\n      compression_methods (len=1)\n        No Compression (0x00)\n      extensions, length = 115\n        extension_type=ec_point_formats(11), length=4\n          uncompressed (0)\n          ansiX962_compressed_prime (1)\n          ansiX962_compressed_char2 (2)\n        extension_type=elliptic_curves(10), length=58\n          sect571r1 (B-571) (14)\n          sect571k1 (K-571) (13)\n          secp521r1 (P-521) (25)\n          brainpoolP512r1 (28)\n          sect409k1 (K-409) (11)\n          sect409r1 (B-409) (12)\n          brainpoolP384r1 (27)\n          secp384r1 (P-384) (24)\n          sect283k1 (K-283) (9)\n          sect283r1 (B-283) (10)\n          brainpoolP256r1 (26)\n          secp256k1 (22)\n          secp256r1 (P-256) (23)\n          sect239k1 (8)\n          sect233k1 (K-233) (6)\n          sect233r1 (B-233) (7)\n          secp224k1 (20)\n          secp224r1 (P-224) (21)\n          sect193r1 (4)\n          sect193r2 (5)\n          secp192k1 (18)\n          secp192r1 (P-192) (19)\n          sect163k1 (K-163) (1)\n          sect163r1 (2)\n          sect163r2 (B-163) (3)\n          secp160k1 (15)\n          secp160r1 (16)\n          secp160r2 (17)\n        extension_type=session_ticket(35), length=0\n        extension_type=signature_algorithms(13), length=32\n          sha512+rsa (6+1)\n          sha512+dsa (6+2)\n          sha512+ecdsa (6+3)\n          sha384+rsa (5+1)\n          sha384+dsa (5+2)\n          sha384+ecdsa (5+3)\n          sha256+rsa (4+1)\n          sha256+dsa (4+2)\n          sha256+ecdsa (4+3)\n          sha224+rsa (3+1)\n          sha224+dsa (3+2)\n          sha224+ecdsa (3+3)\n          sha1+rsa (2+1)\n          sha1+dsa (2+2)\n          sha1+ecdsa (2+3)\n        extension_type=heartbeat(15), length=1\n          HeartbeatMode: peer_allowed_to_send\n\nSSL_connect:SSLv2/v3 write client hello A\nread from 0x2387050 [0x238c630] (7 bytes =&gt; 7 (0x7))\n0000 - 15 03 03 00 02 02 28                              ......(\nSSL3 alert read:fatal:handshake failure\nReceived Record\nHeader:\n  Version = TLS 1.2 (0x303)\n  Content Type = Alert (21)\n  Length = 2\n    Level=fatal(2), description=handshake failure(40)\n\nSSL_connect:error in SSLv2/v3 read server hello A\n140716039956128:error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure:s23_clnt.c:777:\n---\nno peer certificate available\n---\nNo client certificate CA names sent\n---\nSSL handshake has read 7 bytes and written 361 bytes\n---\nNew, (NONE), Cipher is (NONE)\nSecure Renegotiation IS NOT supported\nCompression: NONE\nExpansion: NONE\nNo ALPN negotiated\n---\n\n</pre>","","troubleshooting ssl connections with openssl the client command supports trace when built with enable ssl trace tar openssl beta3 tar openssl beta3 config enable ssl trace prefix pwd prefix openssldir pwd prefix make dep make apps openssl client connect yum dev bbc 443 cert home stan downloads hillt08 pem cafile home stan downloads pem debug state trace warning can open config file home stan downloads openssl beta3 prefix openssl cnf connected 00000003 ssl connect before connect initialization write 0x2387050 0x23870d0 361 bytes 361 0x169 0000 0010 0020 0030 0040 0050 0060 amp 0070 0080 0090 00a0 00b0 00c0 00d0 00e0 00f0 0100 0110 0120 0130 0140 0150 0160 sent record header version tls 0x301 content type handshake length 356 clienthello length 352 client version 0x303 tls random gmt unix time 0xefc03d48 random bytes len 78fa7979e34a7e9d968692d6253ed87b03eefffb7b0eb4e37fdf1183 session len cipher suites len 196 0xc0 0x30 tls ecdhe rsa with aes 256 gcm sha384 0xc0 0x2c tls ecdhe ecdsa with aes 256 gcm sha384 0xc0 0x28 tls ecdhe rsa with aes 256 cbc sha384 0xc0 0x24 tls ecdhe ecdsa with aes 256 cbc sha384 0xc0 0x14 tls ecdhe rsa with aes 256 cbc sha 0xc0 0x0a tls ecdhe ecdsa with aes 256 cbc sha 0x00 0xa5 tls dss with aes 256 gcm sha384 0x00 0xa3 tls dhe dss with aes 256 gcm sha384 0x00 0xa1 tls rsa with aes 256 gcm sha384 0x00 0x9f tls dhe rsa with aes 256 gcm sha384 0x00 0x6b tls dhe rsa with aes 256 cbc sha256 0x00 0x6a tls dhe dss with aes 256 cbc sha256 0x00 0x69 tls rsa with aes 256 cbc sha256 0x00 0x68 tls dss with aes 256 cbc sha256 0x00 0x39 tls dhe rsa with aes 256 cbc sha 0x00 0x38 tls dhe dss with aes 256 cbc sha 0x00 0x37 tls rsa with aes 256 cbc sha 0x00 0x36 tls dss with aes 256 cbc sha 0x00 0x88 tls dhe rsa with camellia 256 cbc sha 0x00 0x87 tls dhe dss with camellia 256 cbc sha 0x00 0x86 tls rsa with camellia 256 cbc sha 0x00 0x85 tls dss with camellia 256 cbc sha 0xc0 0x32 tls ecdh rsa with aes 256 gcm sha384 0xc0 0x2e tls ecdh ecdsa with aes 256 gcm sha384 0xc0 0x2a tls ecdh rsa with aes 256 cbc sha384 0xc0 0x26 tls ecdh ecdsa with aes 256 cbc sha384 0xc0 0x0f tls ecdh rsa with aes 256 cbc sha 0xc0 0x05 tls ecdh ecdsa with aes 256 cbc sha 0x00 0x9d tls rsa with aes 256 gcm sha384 0x00 0x3d tls rsa with aes 256 cbc sha256 0x00 0x35 tls rsa with aes 256 cbc sha 0x00 0x84 tls rsa with camellia 256 cbc sha 0xc0 0x2f tls ecdhe rsa with aes 128 gcm sha256 0xc0 0x2b tls ecdhe ecdsa with aes 128 gcm sha256 0xc0 0x27 tls ecdhe rsa with aes 128 cbc sha256 0xc0 0x23 tls ecdhe ecdsa with aes 128 cbc sha256 0xc0 0x13 tls ecdhe rsa with aes 128 cbc sha 0xc0 0x09 tls ecdhe ecdsa with aes 128 cbc sha 0x00 0xa4 tls dss with aes 128 gcm sha256 0x00 0xa2 tls dhe dss with aes 128 gcm sha256 0x00 0xa0 tls rsa with aes 128 gcm sha256 0x00 0x9e tls dhe rsa with aes 128 gcm sha256 0x00 0x67 tls dhe rsa with aes 128 cbc sha256 0x00 0x40 tls dhe dss with aes 128 cbc sha256 0x00 0x3f tls rsa with aes 128 cbc sha256 0x00 0x3e tls dss with aes 128 cbc sha256 0x00 0x33 tls dhe rsa with aes 128 cbc sha 0x00 0x32 tls dhe dss with aes 128 cbc sha 0x00 0x31 tls rsa with aes 128 cbc sha 0x00 0x30 tls dss with aes 128 cbc sha 0x00 0x9a tls dhe rsa with seed cbc sha 0x00 0x99 tls dhe dss with seed cbc sha 0x00 0x98 tls rsa with seed cbc sha 0x00 0x97 tls dss with seed cbc sha 0x00 0x45 tls dhe rsa with camellia 128 cbc sha 0x00 0x44 tls dhe dss with camellia 128 cbc sha 0x00 0x43 tls rsa with camellia 128 cbc sha 0x00 0x42 tls dss with camellia 128 cbc sha 0xc0 0x31 tls ecdh rsa with aes 128 gcm sha256 0xc0 0x2d tls ecdh ecdsa with aes 128 gcm sha256 0xc0 0x29 tls ecdh rsa with aes 128 cbc sha256 0xc0 0x25 tls ecdh ecdsa with aes 128 cbc sha256 0xc0 0x0e tls ecdh rsa with aes 128 cbc sha 0xc0 0x04 tls ecdh ecdsa with aes 128 cbc sha 0x00 0x9c tls rsa with aes 128 gcm sha256 0x00 0x3c tls rsa with aes 128 cbc sha256 0x00 0x2f tls rsa with aes 128 cbc sha 0x00 0x96 tls rsa with seed cbc sha 0x00 0x41 tls rsa with camellia 128 cbc sha 0x00 0x07 ssl rsa with idea cbc sha 0xc0 0x11 tls ecdhe rsa with rc4 128 sha 0xc0 0x07 tls ecdhe ecdsa with rc4 128 sha 0xc0 0x0c tls ecdh rsa with rc4 128 sha 0xc0 0x02 tls ecdh ecdsa with rc4 128 sha 0x00 0x05 ssl rsa with rc4 128 sha 0x00 0x04 ssl rsa with rc4 128 md5 0xc0 0x12 tls ecdhe rsa with 3des ede cbc sha 0xc0 0x08 tls ecdhe ecdsa with 3des ede cbc sha 0x00 0x16 ssl dhe rsa with 3des ede cbc sha 0x00 0x13 ssl dhe dss with 3des ede cbc sha 0x00 0x10 ssl rsa with 3des ede cbc sha 0x00 0x0d ssl dss with 3des ede cbc sha 0xc0 0x0d tls ecdh rsa with 3des ede cbc sha 0xc0 0x03 tls ecdh ecdsa with 3des ede cbc sha 0x00 0x0a ssl rsa with 3des ede cbc sha 0x00 0x15 ssl dhe rsa with des cbc sha 0x00 0x12 ssl dhe dss with des cbc sha 0x00 0x0f ssl rsa with des cbc sha 0x00 0x0c ssl dss with des cbc sha 0x00 0x09 ssl rsa with des cbc sha 0x00 0x14 ssl dhe rsa export with des40 cbc sha 0x00 0x11 ssl dhe dss export with des40 cbc sha 0x00 0x0e ssl rsa export with des40 cbc sha 0x00 0x0b ssl dss export with des40 cbc sha 0x00 0x08 ssl rsa export with des40 cbc sha 0x00 0x06 ssl rsa export with rc2 cbc md5 0x00 0x03 ssl rsa export with rc4 md5 0x00 0xff tls empty renegotiation info scsv compression methods len compression 0x00 extensions length 115 extension type point formats length uncompressed ansix962 compressed prime ansix962 compressed char2 extension type elliptic curves length sect571r1 571 sect571k1 571 secp521r1 521 brainpoolp512r1 sect409k1 409 sect409r1 409 brainpoolp384r1 secp384r1 384 sect283k1 283 sect283r1 283 brainpoolp256r1 secp256k1 secp256r1 256 sect239k1 sect233k1 233 sect233r1 233 secp224k1 secp224r1 224 sect193r1 sect193r2 secp192k1 secp192r1 192 sect163k1 163 sect163r1 sect163r2 163 secp160k1 secp160r1 secp160r2 extension type session ticket length extension type signature algorithms length sha512 rsa sha512 dsa sha512 ecdsa sha384 rsa sha384 dsa sha384 ecdsa sha256 rsa sha256 dsa sha256 ecdsa sha224 rsa sha224 dsa sha224 ecdsa sha1 rsa sha1 dsa sha1 ecdsa extension type heartbeat length heartbeatmode peer allowed send ssl connect sslv2 write client hello read from 0x2387050 0x238c630 bytes 0x7 0000 ssl3 alert read fatal handshake failure received record header version tls 0x303 content type alert length level fatal description handshake failure ssl connect error sslv2 read server hello 140716039956128 error 14077410 ssl routines ssl23 get server hello sslv3 alert handshake failure s23 clnt 777 peer certificate available client certificate names sent ssl handshake has read bytes and written 361 bytes new none cipher none secure renegotiation not supported compression none expansion none alpn negotiated","a:0:{}","1","0","1","1","0","0","0"
"801477","09510e8a3859760a99b782df9c5a1b0e","TH3049-GANDI","","2014-11-12 18:09:00","UTC","2014-11-12 18:09:19","2014-11-12 18:09:45","","post","wiki","2014/11/12/Speeding-up-git-svn","en","Speeding up git svn","","","For those of use unfortunate enough to use (large) svn repositories I found the following has improved things slightly when you get the occassional\r\n\r\n///\r\nW: Ignoring error from SVN, path probably does not exist: (160013): Filesystem has no item: '/!svn/bc/101' path not found: Additional errors:: File not found: revision 101, path '/services/jet/mami/trunk/branches/PSDR-1139'\r\nW: Do not be alarmed at the above message git-svn is just searching aggressively for old history.\r\nThis may take a while on large repositories\r\n///\r\n\r\nmessage (and it starts going through the repository from revision 1)\r\n\r\n///\r\n$ git config svn.brokenSymlinkWorkaround false\r\n///\r\n\r\nObviously beware if you have symlinks in your svn respository.","<p>For those of use unfortunate enough to use (large) svn repositories I found\nthe following has improved things slightly when you get the occassional</p>\n<pre>\nW: Ignoring error from SVN, path probably does not exist: (160013): Filesystem has no item: '/!svn/bc/101' path not found: Additional errors:: File not found: revision 101, path '/services/jet/mami/trunk/branches/PSDR-1139'\nW: Do not be alarmed at the above message git-svn is just searching aggressively for old history.\nThis may take a while on large repositories\n</pre>\n<p>message (and it starts going through the repository from revision 1)</p>\n<pre>\n$ git config svn.brokenSymlinkWorkaround false\n</pre>\n<p>Obviously beware if you have symlinks in your svn respository.</p>","","speeding git svn for those use unfortunate enough use large svn repositories found the following has improved things slightly when you get the occassional ignoring error from svn path probably does not exist 160013 filesystem has item svn 101 path not found additional errors file not found revision 101 path services jet mami trunk branches psdr 1139 not alarmed the above message git svn just searching aggressively for old history this may take while large repositories message and starts going through the repository from revision git config svn brokensymlinkworkaround false obviously beware you have symlinks your svn respository","a:0:{}","1","0","1","1","0","0","0"
"808034","09510e8a3859760a99b782df9c5a1b0e","TH3049-GANDI","62938","2015-01-19 11:15:00","UTC","2015-01-19 11:15:08","2015-01-19 11:15:08","","post","wiki","2015/01/19/What-SHA1withRSA-actually-does","en","What SHA1withRSA actually does","","","I had some Java code generating a signature like this:\n\n///\nSignature signature = Signature.getInstance(\"SHA1withRSA\");\nsignature.initSign(privateKey);\nsignature.update(plainText);\nreturn signature.sign();\n///\n\nNatively I assumed that the reverse operation would simply be decrypting the returned data to reveal a hash.  However the result was a 35 byte string rather than the 40 I was expecting.  Turns out the the signature is also ASN encoded:\n\n///\nirb(main):041:0> key.public_decrypt(signature)\n=> \"0!0\t\x06\x05+\x0E\x03\x02\x1A\x05\x00\x04\x14\xF7\x1C\xB4o&\xCFA\xFFN\x14\xE9\xA4V\x89\xC5K\xC7\xB8\fg\"\nirb(main):042:0> OpenSSL::ASN1.decode(key.public_decrypt(signature))\n=> #<OpenSSL::ASN1::Sequence:0x007f2c9937f718 @tag=16, @value=[#<OpenSSL::ASN1::Sequence:0x007f2c9937f920 @tag=16, @value=[#<OpenSSL::ASN1::ObjectId:0x007f2c9937f9c0 @tag=6, @value=\"SHA1\", @tagging=nil, @tag_class=:UNIVERSAL, @infinite_length=false>, #<OpenSSL::ASN1::Null:0x007f2c9937f948 @tag=5, @value=nil, @tagging=nil, @tag_class=:UNIVERSAL, @infinite_length=false>], @tagging=nil, @tag_class=:UNIVERSAL, @infinite_length=false>, #<OpenSSL::ASN1::OctetString:0x007f2c9937f740 @tag=4, @value=\"\xF7\x1C\xB4o&\xCFA\xFFN\x14\xE9\xA4V\x89\xC5K\xC7\xB8\fg\", @tagging=nil, @tag_class=:UNIVERSAL, @infinite_length=false>], @tagging=nil, @tag_class=:UNIVERSAL, @infinite_length=false>\n///","<p>I had some Java code generating a signature like this:</p>\n<pre>\nSignature signature = Signature.getInstance(&quot;SHA1withRSA&quot;);\nsignature.initSign(privateKey);\nsignature.update(plainText);\nreturn signature.sign();\n</pre>\n<p>Natively I assumed that the reverse operation would simply be decrypting the\nreturned data to reveal a hash. However the result was a 35 byte string rather\nthan the 40 I was expecting. Turns out the the signature is also ASN\nencoded:</p>\n<pre>\nirb(main):041:0&gt; key.public_decrypt(signature)\n=&gt; &quot;0!0\t\x06\x05+\x0E\x03\x02\x1A\x05\x00\x04\x14\xF7\x1C\xB4o&amp;\xCFA\xFFN\x14\xE9\xA4V\x89\xC5K\xC7\xB8\fg&quot;\nirb(main):042:0&gt; OpenSSL::ASN1.decode(key.public_decrypt(signature))\n=&gt; #&lt;OpenSSL::ASN1::Sequence:0x007f2c9937f718 @tag=16, @value=[#&lt;OpenSSL::ASN1::Sequence:0x007f2c9937f920 @tag=16, @value=[#&lt;OpenSSL::ASN1::ObjectId:0x007f2c9937f9c0 @tag=6, @value=&quot;SHA1&quot;, @tagging=nil, @tag_class=:UNIVERSAL, @infinite_length=false&gt;, #&lt;OpenSSL::ASN1::Null:0x007f2c9937f948 @tag=5, @value=nil, @tagging=nil, @tag_class=:UNIVERSAL, @infinite_length=false&gt;], @tagging=nil, @tag_class=:UNIVERSAL, @infinite_length=false&gt;, #&lt;OpenSSL::ASN1::OctetString:0x007f2c9937f740 @tag=4, @value=&quot;\xF7\x1C\xB4o&amp;\xCFA\xFFN\x14\xE9\xA4V\x89\xC5K\xC7\xB8\fg&quot;, @tagging=nil, @tag_class=:UNIVERSAL, @infinite_length=false&gt;], @tagging=nil, @tag_class=:UNIVERSAL, @infinite_length=false&gt;\n</pre>","","what sha1withrsa actually does had some java code generating signature like this signature signature signature getinstance quot sha1withrsa quot signature initsign privatekey signature update plaintext return signature sign natively assumed that the reverse operation would simply decrypting the returned data reveal hash however the result was byte string rather than the was expecting turns out the the signature also asn encoded irb main 041 key public decrypt signature quot x06 x05 x0e x03 x02 x1a x05 x00 x04 x14 xf7 x1c xb4o amp xcfa xffn x14 xe9 xa4v x89 xc5k xc7 xb8 quot irb main 042 openssl asn1 decode key public decrypt signature openssl asn1 sequence 0x007f2c9937f718 tag value openssl asn1 sequence 0x007f2c9937f920 tag value openssl asn1 objectid 0x007f2c9937f9c0 tag value quot sha1 quot tagging nil tag class universal infinite length false openssl asn1 null 0x007f2c9937f948 tag value nil tagging nil tag class universal infinite length false tagging nil tag class universal infinite length false openssl asn1 octetstring 0x007f2c9937f740 tag value quot xf7 x1c xb4o amp xcfa xffn x14 xe9 xa4v x89 xc5k xc7 xb8 quot tagging nil tag class universal infinite length false tagging nil tag class universal infinite length false","","1","0","1","1","0","0","0"
"807769","09510e8a3859760a99b782df9c5a1b0e","TH3049-GANDI","62938","2015-01-16 15:54:00","UTC","2015-01-16 15:54:51","2015-01-16 15:55:49","","post","wiki","2015/01/16/Ruby-s-Nokogiri-serialize-/-to_s-without-whitespace","en","Ruby's Nokogiri serialize / to_s without whitespace","","","I have an app that I wish to verify a signature of the xml fragment.  Therefore white space is important.  Eventually found the way to do this:\r\n\r\n///\r\nxml_object.at_xpath('//Data').serialize(:save_with => Nokogiri::XML::Node::SaveOptions::AS_XML)\r\n///","<p>I have an app that I wish to verify a signature of the xml fragment.\nTherefore white space is important. Eventually found the way to do this:</p>\n<pre>\nxml_object.at_xpath('//Data').serialize(:save_with =&gt; Nokogiri::XML::Node::SaveOptions::AS_XML)\n</pre>","","ruby nokogiri serialize without whitespace have app that wish verify signature the xml fragment therefore white space important eventually found the way this xml object xpath data serialize save with nokogiri xml node saveoptions xml","","1","0","1","1","0","0","0"
"808039","09510e8a3859760a99b782df9c5a1b0e","TH3049-GANDI","62938","2015-01-19 11:34:00","UTC","2015-01-19 11:34:34","2015-01-19 11:34:34","","post","wiki","2015/01/19/PKCS-1-private-key-syntax-vs-PKCS-9","en","PKCS #1 private key syntax vs PKCS #8","","","Recently I've been looking at a RSA private key embedded in a configuration file.  Things weren't working as expected so I started looking at the key more closely.  The string I had was a base64 encoded ASN structure.  I came across 2 formats of these structures [|http://tools.ietf.org/html/rfc2313#section-7.2|en] and [|https://tools.ietf.org/html/rfc5208#page-3|en].  Luckily OpenSSL seemed to have no problem reading either so this wasn't actually an issue for me, just something I hadn't appreciated.","<p>Recently I've been looking at a RSA private key embedded in a configuration\nfile. Things weren't working as expected so I started looking at the key more\nclosely. The string I had was a base64 encoded ASN structure. I came across 2\nformats of these structures <a href=\"http://tools.ietf.org/html/rfc2313#section-7.2\" hreflang=\"en\"></a> and\n<a href=\"https://tools.ietf.org/html/rfc5208#page-3\" hreflang=\"en\"></a>.\nLuckily OpenSSL seemed to have no problem reading either so this wasn't\nactually an issue for me, just something I hadn't appreciated.</p>","","pkcs private key syntax pkcs recently been looking rsa private key embedded configuration file things weren working expected started looking the key more closely the string had was base64 encoded asn structure came across formats these structures and luckily openssl seemed have problem reading either this wasn actually issue for just something hadn appreciated","","1","0","1","1","0","0","0"
"803390","09510e8a3859760a99b782df9c5a1b0e","TH3049-GANDI","","2014-12-02 11:04:00","UTC","2014-12-02 11:04:01","2014-12-02 11:04:43","","post","wiki","2014/12/02/Musings-on-Docker-and-Open-Source-Software","en","Musings on Docker and Open Source Software","","","I've been keen on containers, particularly over virtual machines, ever since experimenting with OpenVZ.  No extra OS fits with a nothing left to take away philosophy.  Now it seems to have taken over the virtual machine on the cloud buzz.  About time.  Still, is it where we want to head?\r\n\r\nA Docker talk I recently saw (it was also interesting that he ran a Ubuntu VM on a Mac) had a nice comparison with the [containerization|http://en.wikipedia.org/wiki/Containerization] of shipping in the 1950s.  Nice.  But how does it compare to the Open Source world where I have a distribution like Debian or Ubuntu which packages all its software and releases every so often.  Aren't packages my container?  Maybe not from a security perspective but then I have AppArmor to think about too.  It appears Docker is better built for a heterogeneous environments since my packages aare distro specific.  But I'm not sure I want to accept heterogeneity, if I have a choice?","<p>I've been keen on containers, particularly over virtual machines, ever since\nexperimenting with OpenVZ. No extra OS fits with a nothing left to take away\nphilosophy. Now it seems to have taken over the virtual machine on the cloud\nbuzz. About time. Still, is it where we want to head?</p>\n<p>A Docker talk I recently saw (it was also interesting that he ran a Ubuntu\nVM on a Mac) had a nice comparison with the <a href=\"http://en.wikipedia.org/wiki/Containerization\">containerization</a> of\nshipping in the 1950s. Nice. But how does it compare to the Open Source world\nwhere I have a distribution like Debian or Ubuntu which packages all its\nsoftware and releases every so often. Aren't packages my container? Maybe not\nfrom a security perspective but then I have AppArmor to think about too. It\nappears Docker is better built for a heterogeneous environments since my\npackages aare distro specific. But I'm not sure I want to accept heterogeneity,\nif I have a choice?</p>","","musings docker and open source software been keen containers particularly over virtual machines ever since experimenting with openvz extra fits with nothing left take away philosophy now seems have taken over the virtual machine the cloud buzz about time still where want head docker talk recently saw was also interesting that ran ubuntu mac had nice comparison with the containerization shipping the 1950s nice but how does compare the open source world where have distribution like debian ubuntu which packages all its software and releases every often aren packages container maybe not from security perspective but then have apparmor think about too appears docker better built for heterogeneous environments since packages aare distro specific but not sure want accept heterogeneity have choice","a:0:{}","1","0","1","1","0","0","0"
"814166","09510e8a3859760a99b782df9c5a1b0e","TH3049-GANDI","","2015-03-19 21:04:00","UTC","2015-03-19 21:04:21","2015-03-19 21:04:21","","post","wiki","2015/03/19/Best-way-to-do-a-dns-lookup-in-bash","en","Best way to do a dns lookup in bash?","","","So far:\n///\ngetent hosts bbc.co.uk | sed -n '1s/\([^ ]*\).*/\1/p'\n///","<p>So far:</p>\n<pre>\ngetent hosts bbc.co.uk | sed -n '1s/\([^ ]*\).*/\1/p'\n</pre>","","best way dns lookup bash far getent hosts bbc sed","","1","0","1","1","0","0","0"
"803389","09510e8a3859760a99b782df9c5a1b0e","TH3049-GANDI","","2014-12-02 10:57:00","UTC","2014-12-02 10:57:34","2014-12-02 10:59:55","","post","wiki","2014/12/02/Speeding-up-git-svn-2","en","This may take a while on large repositories 2","","","Further to [my previous post|/post/2014/11/12/Speeding-up-git-svn] I've found the biggest win for the\r\n///\r\nThis may take a while on large repositories\r\n///\r\nwait is\r\n///\r\ngit svn fetch --log-window-size=10000\r\n///\r\n\r\nLots quicker!","<p>Further to <a href=\"/post/2014/11/12/Speeding-up-git-svn\">my previous\npost</a> I've found the biggest win for the</p>\n<pre>\nThis may take a while on large repositories\n</pre>\n<p>wait is</p>\n<pre>\ngit svn fetch --log-window-size=10000\n</pre>\n<p>Lots quicker!</p>","","this may take while large repositories further previous post found the biggest win for the this may take while large repositories wait git svn fetch log window size 10000 lots quicker","a:0:{}","1","0","1","1","0","0","0"
"803391","09510e8a3859760a99b782df9c5a1b0e","TH3049-GANDI","","2014-12-02 11:05:00","UTC","2014-12-02 11:05:59","2014-12-02 11:05:59","","post","wiki","2014/12/02/Windows-7-installation-:/","en","Windows 7 installation :/","","","I'm reinstalling Windows on my laptop as part of selling it.  Process turns out to be relatively easy:\r\n# Download correct language iso - google for DigitalRiver Windows 7 iso\r\n# Format a USB drive as NTFS with bootable flag set (possible in the Ubuntu Disks utility\r\n# Copy content of ISO to the drive (sudo mount -o loop ~/Downloads/X17-59186.iso /mnt)\r\n# Boot laptop off the USB drive","<p>I'm reinstalling Windows on my laptop as part of selling it. Process turns\nout to be relatively easy:</p>\n<ol>\n<li>Download correct language iso - google for DigitalRiver Windows 7 iso</li>\n<li>Format a USB drive as NTFS with bootable flag set (possible in the Ubuntu\nDisks utility</li>\n<li>Copy content of ISO to the drive (sudo mount -o loop\n~/Downloads/X17-59186.iso /mnt)</li>\n<li>Boot laptop off the USB drive</li>\n</ol>","","windows installation reinstalling windows laptop part selling process turns out relatively easy download correct language iso google for digitalriver windows iso format usb drive ntfs with bootable flag set possible the ubuntu disks utility copy content iso the drive sudo mount loop downloads x17 59186 iso mnt boot laptop off the usb drive","a:0:{}","1","0","1","1","0","0","0"
"804082","09510e8a3859760a99b782df9c5a1b0e","TH3049-GANDI","","2014-12-09 10:34:00","UTC","2014-12-09 10:34:06","2014-12-09 10:35:45","","post","wiki","2014/12/09/Keyboard-shortcut-for-moving-windows-between-monitors","en","Keyboard shortcut for moving windows between monitors","","","Unity (as of Ubuntu 14.10) does not come with a keyboard shortcut to move windows between screens.  There is a Compiz plugin that does though - put.  To enable\r\n\r\n///\r\nsudo apt-get install compizconfig-settings-manager compiz-plugins\r\n///\r\n\r\nThen go into ccsm and set a shortcut for \"Put to Next Output\" (I used Super and N) in the Put options within the Window Management section.","<p>Unity (as of Ubuntu 14.10) does not come with a keyboard shortcut to move\nwindows between screens. There is a Compiz plugin that does though - put. To\nenable</p>\n<pre>\nsudo apt-get install compizconfig-settings-manager compiz-plugins\n</pre>\n<p>Then go into ccsm and set a shortcut for &quot;Put to Next Output&quot; (I used Super\nand N) in the Put options within the Window Management section.</p>","","keyboard shortcut for moving windows between monitors unity ubuntu does not come with keyboard shortcut move windows between screens there compiz plugin that does though put enable sudo apt get install compizconfig settings manager compiz plugins then into ccsm and set shortcut for quot put next output quot used super and the put options within the window management section","a:0:{}","1","0","1","1","0","0","0"
"815798","09510e8a3859760a99b782df9c5a1b0e","TH3049-GANDI","","2015-04-03 15:50:00","UTC","2015-04-03 15:50:19","2015-04-03 15:50:19","","post","wiki","2015/04/03/pasaffe-on-fedora","en","pasaffe on fedora","","","Until a package is done I'm finding the easiest way to run pasaffe is\n///\ntar xf pasaffe-0.43.tar.gz\ncd pasaffe-0.43\nglib-compile-schemas data/glib-2.0/schemas                                                                  \nXDG_DATA_DIRS=$HOME/Downloads/pasaffe-0.43/data:/usr/share $HOME/Downloads/pasaffe-0.43/bin/pasaffe -f ~/password.psafe3\n///","<p>Until a package is done I'm finding the easiest way to run pasaffe is</p>\n<pre>\ntar xf pasaffe-0.43.tar.gz\ncd pasaffe-0.43\nglib-compile-schemas data/glib-2.0/schemas                                                                  \nXDG_DATA_DIRS=$HOME/Downloads/pasaffe-0.43/data:/usr/share $HOME/Downloads/pasaffe-0.43/bin/pasaffe -f ~/password.psafe3\n</pre>","","pasaffe fedora until package done finding the easiest way run pasaffe tar pasaffe tar pasaffe glib compile schemas data glib schemas xdg data dirs home downloads pasaffe data usr share home downloads pasaffe bin pasaffe password psafe3","","1","0","1","1","0","0","0"
"816793","09510e8a3859760a99b782df9c5a1b0e","TH3049-GANDI","","2015-04-14 08:03:00","UTC","2015-04-14 08:03:57","2015-04-14 08:06:09","","post","wiki","2015/04/14/test-unpublished","en","test unpublished","","","test","<p>test</p>","","test unpublished test","a:0:{}","-2","0","1","1","0","0","0"
